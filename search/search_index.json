{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Pr\u00e1ctica 2.1 Instalaci\u00f3n de NGINX Para instalar Nginx en nuestro equipo Debian, ejecutamos en la terminal: sudo apt install nginx Si al hacer: systemctl status nginx el servicio aparece como \"failed\", es posible que tengamos apache2 instalado y utilizando el puerto 80. En ese caso tendremos que, primero, parar el servicio de Apache con: systemctl stop apache2 Otra posibilidad es directamente desinstalar apache2 con: sudo apt remove apache2 y s\u00f3lo despu\u00e9s podremos inicializar el servicio de Nginx con: systemctl start nginx Para comprobar el estado de Nginx, volvemos a ejecutar: systemctl status nginx Preparaci\u00f3n de los directorios del sitio web Primero, crearemos un directorio para nuestro sitio web: sudo mkdir -p /var/www/ud2practica1/html En mi caso, he clonado un repositorio para una web est\u00e1tica de prueba para la p\u00e1gina: Y realizamos unos ajustes sobre la propiedad del directorio: sudo chown -R www-data:www-data /var/www/ud2practica1/html sudo chmod -R 755 /var/www/ud2practica1/html Configuraci\u00f3n del servidor Para que Nginx presente el contenido del sitio, ser\u00e1 necesario crear un archivo de configuraci\u00f3n en /etc/nginx/sites-available/nombre-del-dominio, con el siguiente contenido: A continuaci\u00f3n tendremos que crear un enlace simb\u00f3lico entre este archivo y el de los sitios habilitados en Nginx, ejecutando: sudo ln -s /etc/nginx/sites-available/despliegue /etc/nginx/sites-enabled/ // El nombre es distinto porque cambi\u00e9 el nombre de directorio a \"despliegue\" Y reiniciamos Nginx con: systemctl restart nginx Por \u00faltimo, a\u00f1adiremos la IP de la m\u00e1quina a la lista de hosts: Configurar SFTP Para configurar el protocolo de transferencia de archivos, realizaremos las siguientes configuraciones desde el terminal: // Instalamos vsftpd sudo apt-get install vsftpd // Creamos un directorio en home mkdir /home/alberto/ftp // Creamos certificados de seguridad sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout/etc/ssl/private/vsftpd.pem -out /etc/ssl/private/vsftpd.pem A continuaci\u00f3n, modificaremos el archivo de configuraci\u00f3n /etc/vsftpd.conf. Buscamos las l\u00edneas: rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key ssl_enable=NO las borramos y escribimos en su lugar lo siguiente: Tras lo que reiniciamos el servicio con: sudo systemctl restart --now vsftpd","title":"Pr\u00e1ctica 2.1"},{"location":"#practica-21","text":"","title":"Pr\u00e1ctica 2.1"},{"location":"#instalacion-de-nginx","text":"Para instalar Nginx en nuestro equipo Debian, ejecutamos en la terminal: sudo apt install nginx Si al hacer: systemctl status nginx el servicio aparece como \"failed\", es posible que tengamos apache2 instalado y utilizando el puerto 80. En ese caso tendremos que, primero, parar el servicio de Apache con: systemctl stop apache2 Otra posibilidad es directamente desinstalar apache2 con: sudo apt remove apache2 y s\u00f3lo despu\u00e9s podremos inicializar el servicio de Nginx con: systemctl start nginx Para comprobar el estado de Nginx, volvemos a ejecutar: systemctl status nginx","title":"Instalaci\u00f3n de NGINX"},{"location":"#preparacion-de-los-directorios-del-sitio-web","text":"Primero, crearemos un directorio para nuestro sitio web: sudo mkdir -p /var/www/ud2practica1/html En mi caso, he clonado un repositorio para una web est\u00e1tica de prueba para la p\u00e1gina: Y realizamos unos ajustes sobre la propiedad del directorio: sudo chown -R www-data:www-data /var/www/ud2practica1/html sudo chmod -R 755 /var/www/ud2practica1/html","title":"Preparaci\u00f3n de los directorios del sitio web"},{"location":"#configuracion-del-servidor","text":"Para que Nginx presente el contenido del sitio, ser\u00e1 necesario crear un archivo de configuraci\u00f3n en /etc/nginx/sites-available/nombre-del-dominio, con el siguiente contenido: A continuaci\u00f3n tendremos que crear un enlace simb\u00f3lico entre este archivo y el de los sitios habilitados en Nginx, ejecutando: sudo ln -s /etc/nginx/sites-available/despliegue /etc/nginx/sites-enabled/ // El nombre es distinto porque cambi\u00e9 el nombre de directorio a \"despliegue\" Y reiniciamos Nginx con: systemctl restart nginx Por \u00faltimo, a\u00f1adiremos la IP de la m\u00e1quina a la lista de hosts:","title":"Configuraci\u00f3n del servidor"},{"location":"#configurar-sftp","text":"Para configurar el protocolo de transferencia de archivos, realizaremos las siguientes configuraciones desde el terminal: // Instalamos vsftpd sudo apt-get install vsftpd // Creamos un directorio en home mkdir /home/alberto/ftp // Creamos certificados de seguridad sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout/etc/ssl/private/vsftpd.pem -out /etc/ssl/private/vsftpd.pem A continuaci\u00f3n, modificaremos el archivo de configuraci\u00f3n /etc/vsftpd.conf. Buscamos las l\u00edneas: rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key ssl_enable=NO las borramos y escribimos en su lugar lo siguiente: Tras lo que reiniciamos el servicio con: sudo systemctl restart --now vsftpd","title":"Configurar SFTP"}]}